В aiogram есть два типа кнопок:кнопки клавиатуры и инлайн кнопки.
Разберем кнопки клавиатуры(что бы пользователь не вводил команды вручную).
--------
В папке с ботом создадим еще одну папку keyboards,в которой расположим файлы для кнопок и клавиатур.
В ней нам нужно создать два файла(__init__(что бы сформировать пакет из этой папки и удобно импортировать 
в осн.файл) и файл client_kb(для клавиатуры,кнопок нашего клиента)).
Позже создадим еще один файл для кнопок и клавиатуры админа.

В файл client_kb нужно из aiogram.types импортировать 3 класса(ReplyKeyboardMarkup,KeyboardButton,ReplyKeyboardRemove):
	from aiogram.types import ReplyKeyboardMarkup,KeyboardButton,ReplyKeyboardRemove

Класс KeyboardButton нужен что бы создать каждую кнопку по-отдельности.
Берем по-отдельности переменные(b1,b2,b3),запускает класс KeyboardButton и пишем те строки(команды),которые 
нам необходимы.
	b1 = KeyboardButton('/Режим_работы')
	b2 = KeyboardButton('/Расположение')
	b3 = KeyboardButton('/Меню')

в строку в скобках записываем то,что будет отображаться на кнопке и эту же строку эта кнопка отправляет боту.
! Замаскировать что-то,что бы было написано одно,а отправит эта кнопка другое-НЕЛЬЗЯ,так можно сделать в инлайн клавиатуре !
	! ЭТИ КНОПКИ ОТПРАВЛЯЮТ ЧЕТКО ТО,ЧТО В НИХ НАПИСАНО !
----- 

-----------------------           УКАЗАТЬ ЧТО ЭТО


Есть две кнопки исключения,которые отправляют не то,что в них написано:1)поделиться своим номером телефона,
2)поделиться расположением.Записываем KeyboardButton,в нем пишем первый аргумен:любой текст,второй аргумент:
request_contact(для'поделиться своим номером телефона') и request_location(для'поделиться расположением') со 
знач True.Поймать отправляемый номер можно,с помощью машинных состояний,для получения данных расположения 
пишется отдельный хэндлер,где из отправленного объекта расположения получаем координаты(легко гуглится)

-----------------------           УКАЗАТЬ ЧТО ЭТО



Далее создаем еще переменную kb_client и запускаем класс ReplyKeyboardMarkup(замещает обычную клавиатуру,на ту,
которую создаем).
	kb_client = ReplyKeyboardMarkup()

После мы к ней методом add добавляем кнопки.Метод .add добавляет кнопку каждый раз с новой строки.
	kb_client.add(b1).add(b2).add(b3)

Есть 3 метода добавления кнопки:
	.add    добавляет кнопку каждый раз с новой строки  .add(b1)
	.insert добавит кнопку в строку,если есть место	    .insert(b2)
	.row    добавление всех кнопок в строку             .row(b1,b2)

---Код файла client_kb:

	from aiogram.types import ReplyKeyboardMarkup,KeyboardButton,ReplyKeyboardRemove

	b1 = KeyboardButton('/Режим_работы')
	b2 = KeyboardButton('/Расположение')
	b3 = KeyboardButton('/Меню')

	kb_client = ReplyKeyboardMarkup()

	kb_client.add(b1).add(b2).add(b3)
------------------------
Далее переходим в файл __init__.
Прописываем импорт kb_client из файла client_kb. 
	from keyboards.client_kb import kb_client   #из папки-пакета keyboards,файла client_kb импортируем kb_client (переменную,в которой у нас кастомная клавиатура)
------------------------
Переходим в файл client.py.
Из keyboards импортируем kb_client:
	from keyboards import kb_client

Далее у нас есть команда /start,при помощи которой мы будем отправлять клавиатуру клиенту,поэтому в функцию commands_start
в bot.send_message добавляем параметр reply_markup,в который передаем нашу клавиатуру kb_client:
	# @dp.message_handler(commands=['start', 'help'])
	async def commands_start(message : types.Message):
    		try:
        		await bot.send_message(message.from_user.id, 'Приятного аппетита', reply_markup= kb_client)
        		await message.delete()
    		except:
        		await message.reply('Общение с ботом через ЛС, напишите ему : \nhttps://t.me/cosmetic_menu_bot')

Теперь если мы запустим бота,отправим ему команду /start,то он отправит нам в л.с клавиатуру kb_client,которую мы создали. 


---------------                        ОСТАНОВИЛИСЬ ТУТ 6.40   --------------


Переходим в файл client_kb.
Пишем доп.аргумент resize_keyboard в параметр в переменную kb_client и пишем значение True(теперь кнопки станут меньше,будут меняться
под размер что в них написано).
Так же пожно спрятать клавиатуру,когда пользователь сделает выбор,для этого нужно передать в переменную kb_client в параметр аргумент
one_time_keyboard(одноразовая клавиатура) и туда передаем True.
Но после выбора,пользователь все-равно может открыть клавиатуру,нажав на символ.Для полного удаления клавиатуры есть класс ReplyKeyboardRemove:
	тут мы его использователь не будем,но если нужно,что бы после нажатия на какую-то клавишу клавиатура удалялась,то нужно ипортировать 
	класс в файл через from aiogram.types import ReplyKeyboardRemove и в bot.send_message добавляем параметр reply_markup,в который отправляем
	класс ReplyKeyboardRemove(),который удаляем нашу клавиатуру     await bot.send_message(message.from_user.id, 'ул.Колбасная 15', reply_markup=ReplyKeyboardRemove())
	При этом в переменной клавиатуры kb_client в файле client_kb нужно удалить запись об одноразовости клавиатуры one_time_keyboard = True.
	Теперь при нажатии на эту кнопку он высылает то,что мы просим и удаляется клавиатура и вернуть ее нельзя. 






